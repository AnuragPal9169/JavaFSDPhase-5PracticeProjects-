{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fmodern Consolas;}{\f1\fmodern\fcharset0 Consolas;}{\f2\fmodern Wingdings;}{\f3\fmodern\fcharset2 Wingdings;}{\f4\fnil\fcharset129 Courier New;}}
{\colortbl ;\red20\green20\blue20;\red142\green142\blue142;\red16\green158\blue98;\red148\green146\blue12;\red170\green51\blue170;\red170\green64\blue64;\red56\green136\blue159;\red136\green202\blue222;\red12\green100\blue126;\red134\green216\blue181;\red9\green118\blue72;\red222\green222\blue136;\red126\green126\blue12;}
\viewkind4\uc1\pard\f0\fs20      \u9484?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9488?\cf1\highlight2 
\par \cf0\highlight0      \u9474?                \cf3\f1\bullet  MobaXterm Personal Edition v22.0 \bullet\cf0\f0                 \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474?              \cf4 (X server, SSH client and network tools)\cf0               \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474?                                                                    \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \u8594? Your computer drives are accessible through the \cf5 /drives\cf0  path     \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \u8594? Your DISPLAY is set to \cf5 192.168.0.104:0.0       \cf0                   \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \u8594? When using \cf5 SSH\cf0 , your remote DISPLAY is automatically forwarded   \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \u8594? Each command status is specified by a special symbol (\cf3 v\cf0  or \cf6 x\cf0 )    \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474?                                                                    \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \cf6\f1\bullet  Important:\cf0\f0                                                        \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \cf7 This is MobaXterm Personal Edition. The Professional edition\cf0        \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \cf7 allows you to customize MobaXterm for your company: you can add\cf0     \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \cf7 your own logo, your parameters, your welcome message and generate\cf0   \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \cf7 either an MSI installation package or a portable executable.\cf0        \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \cf7 We can also modify MobaXterm or develop the plugins you need.\cf0       \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9474? \cf4 For more information: \cf5\ul https://mobaxterm.mobatek.net/download.html\cf0\ulnone   \u9474?\cf1\highlight2 
\par \cf0\highlight0      \u9492?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9496?\cf1\highlight2 
\par 
\par \highlight8  \f2 O\f0  30/03/2022 \cf9\highlight10\u9658?\cf1  \f3\'be\f0  01:56.56 \cf11\highlight12\u9658?\cf1  \f2 1\f0  /home/mobaxterm \cf13\highlight0\u9658?\cf0  cd c:\cf1\highlight2 
\par \cf0\highlight0                                                                                                                                         \cf3 v\cf1\highlight2 
\par 
\par \highlight8  \f2 O\f0  30/03/2022 \cf9\highlight10\u9658?\cf1  \f3\'be\f0  01:57.00 \cf11\highlight12\u9658?\cf1  \f2 1\f0  /drives/c \cf13\highlight0\u9658?\cf0  cd aws\cf1\highlight2 
\par \cf0\highlight0                                                                                                                                         \cf3 v\cf1\highlight2 
\par 
\par \highlight8  \f2 O\f0  30/03/2022 \cf9\highlight10\u9658?\cf1  \f3\'be\f0  01:57.01 \cf11\highlight12\u9658?\cf1  \f2 1\f0  /drives/c/aws \cf13\highlight0\u9658?\cf0  ssh -i "PracticeProject.pem" ubuntu@ec2-3-85-25-231.compute-1.amazonaws.com\cf1\highlight2 
\par \cf0\highlight0 Warning: Permanently added 'ec2-3-85-25-231.compute-1.amazonaws.com' (RSA) to the list of known hosts.\cf1\highlight2 
\par \cf0\highlight0 Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.11.0-1022-aws x86_64)\cf1\highlight2 
\par 
\par \cf0\highlight0  * Documentation:  https://help.ubuntu.com\cf1\highlight2 
\par \cf0\highlight0  * Management:     https://landscape.canonical.com\cf1\highlight2 
\par \cf0\highlight0  * Support:        https://ubuntu.com/advantage\cf1\highlight2 
\par 
\par \cf0\highlight0  System information disabled due to load higher than 1.0\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 104 updates can be applied immediately.\cf1\highlight2 
\par \cf0\highlight0 66 of these updates are standard security updates.\cf1\highlight2 
\par \cf0\highlight0 To see these additional updates run: apt list --upgradable\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Last login: Tue Mar 29 20:05:13 2022 from 45.123.216.233\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~$ cd Phase5Docker-Master\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker swarm init\cf1\highlight2 
\par \cf0\highlight0 Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/swarm/init": dial unix /var/run/docker.sock: connect: permission denied\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ sudo chmod 666 /var/run/docker.sock\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker swarm init\cf1\highlight2 
\par \cf0\highlight0 Error response from daemon: This node is already part of a swarm. Use "docker swarm leave" to leave this swarm and join another one.\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker swam leave --force\cf1\highlight2 
\par \cf0\highlight0 unknown flag: --force\cf1\highlight2 
\par \cf0\highlight0 See 'docker --help'.\cf1\highlight2 
\par 
\par \cf0\highlight0 Usage:  docker [OPTIONS] COMMAND\cf1\highlight2 
\par 
\par \cf0\highlight0 A self-sufficient runtime for containers\cf1\highlight2 
\par 
\par \cf0\highlight0 Options:\cf1\highlight2 
\par \cf0\highlight0       --config string      Location of client config files (default "/home/ubuntu/.docker")\cf1\highlight2 
\par \cf0\highlight0   -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context\cf1\highlight2 
\par \cf0\highlight0                            set with "docker context use")\cf1\highlight2 
\par \cf0\highlight0   -D, --debug              Enable debug mode\cf1\highlight2 
\par \cf0\highlight0   -H, --host list          Daemon socket(s) to connect to\cf1\highlight2 
\par \cf0\highlight0   -l, --log-level string   Set the logging level ("debug"|"info"|"warn"|"error"|"fatal") (default "info")\cf1\highlight2 
\par \cf0\highlight0       --tls                Use TLS; implied by --tlsverify\cf1\highlight2 
\par \cf0\highlight0       --tlscacert string   Trust certs signed only by this CA (default "/home/ubuntu/.docker/ca.pem")\cf1\highlight2 
\par \cf0\highlight0       --tlscert string     Path to TLS certificate file (default "/home/ubuntu/.docker/cert.pem")\cf1\highlight2 
\par \cf0\highlight0       --tlskey string      Path to TLS key file (default "/home/ubuntu/.docker/key.pem")\cf1\highlight2 
\par \cf0\highlight0       --tlsverify          Use TLS and verify the remote\cf1\highlight2 
\par \cf0\highlight0   -v, --version            Print version information and quit\cf1\highlight2 
\par 
\par \cf0\highlight0 Management Commands:\cf1\highlight2 
\par \cf0\highlight0   app*        Docker App (Docker Inc., v0.9.1-beta3)\cf1\highlight2 
\par \cf0\highlight0   builder     Manage builds\cf1\highlight2 
\par \cf0\highlight0   buildx*     Docker Buildx (Docker Inc., v0.8.1-docker)\cf1\highlight2 
\par \cf0\highlight0   config      Manage Docker configs\cf1\highlight2 
\par \cf0\highlight0   container   Manage containers\cf1\highlight2 
\par \cf0\highlight0   context     Manage contexts\cf1\highlight2 
\par \cf0\highlight0   image       Manage images\cf1\highlight2 
\par \cf0\highlight0   manifest    Manage Docker image manifests and manifest lists\cf1\highlight2 
\par \cf0\highlight0   network     Manage networks\cf1\highlight2 
\par \cf0\highlight0   node        Manage Swarm nodes\cf1\highlight2 
\par \cf0\highlight0   plugin      Manage plugins\cf1\highlight2 
\par \cf0\highlight0   scan*       Docker Scan (Docker Inc., v0.17.0)\cf1\highlight2 
\par \cf0\highlight0   secret      Manage Docker secrets\cf1\highlight2 
\par \cf0\highlight0   service     Manage services\cf1\highlight2 
\par \cf0\highlight0   stack       Manage Docker stacks\cf1\highlight2 
\par \cf0\highlight0   swarm       Manage Swarm\cf1\highlight2 
\par \cf0\highlight0   system      Manage Docker\cf1\highlight2 
\par \cf0\highlight0   trust       Manage trust on Docker images\cf1\highlight2 
\par \cf0\highlight0   volume      Manage volumes\cf1\highlight2 
\par 
\par \cf0\highlight0 Commands:\cf1\highlight2 
\par \cf0\highlight0   attach      Attach local standard input, output, and error streams to a running container\cf1\highlight2 
\par \cf0\highlight0   build       Build an image from a Dockerfile\cf1\highlight2 
\par \cf0\highlight0   commit      Create a new image from a container's changes\cf1\highlight2 
\par \cf0\highlight0   cp          Copy files/folders between a container and the local filesystem\cf1\highlight2 
\par \cf0\highlight0   create      Create a new container\cf1\highlight2 
\par \cf0\highlight0   diff        Inspect changes to files or directories on a container's filesystem\cf1\highlight2 
\par \cf0\highlight0   events      Get real time events from the server\cf1\highlight2 
\par \cf0\highlight0   exec        Run a command in a running container\cf1\highlight2 
\par \cf0\highlight0   export      Export a container's filesystem as a tar archive\cf1\highlight2 
\par \cf0\highlight0   history     Show the history of an image\cf1\highlight2 
\par \cf0\highlight0   images      List images\cf1\highlight2 
\par \cf0\highlight0   import      Import the contents from a tarball to create a filesystem image\cf1\highlight2 
\par \cf0\highlight0   info        Display system-wide information\cf1\highlight2 
\par \cf0\highlight0   inspect     Return low-level information on Docker objects\cf1\highlight2 
\par \cf0\highlight0   kill        Kill one or more running containers\cf1\highlight2 
\par \cf0\highlight0   load        Load an image from a tar archive or STDIN\cf1\highlight2 
\par \cf0\highlight0   login       Log in to a Docker registry\cf1\highlight2 
\par \cf0\highlight0   logout      Log out from a Docker registry\cf1\highlight2 
\par \cf0\highlight0   logs        Fetch the logs of a container\cf1\highlight2 
\par \cf0\highlight0   pause       Pause all processes within one or more containers\cf1\highlight2 
\par \cf0\highlight0   port        List port mappings or a specific mapping for the container\cf1\highlight2 
\par \cf0\highlight0   ps          List containers\cf1\highlight2 
\par \cf0\highlight0   pull        Pull an image or a repository from a registry\cf1\highlight2 
\par \cf0\highlight0   push        Push an image or a repository to a registry\cf1\highlight2 
\par \cf0\highlight0   rename      Rename a container\cf1\highlight2 
\par \cf0\highlight0   restart     Restart one or more containers\cf1\highlight2 
\par \cf0\highlight0   rm          Remove one or more containers\cf1\highlight2 
\par \cf0\highlight0   rmi         Remove one or more images\cf1\highlight2 
\par \cf0\highlight0   run         Run a command in a new container\cf1\highlight2 
\par \cf0\highlight0   save        Save one or more images to a tar archive (streamed to STDOUT by default)\cf1\highlight2 
\par \cf0\highlight0   search      Search the Docker Hub for images\cf1\highlight2 
\par \cf0\highlight0   start       Start one or more stopped containers\cf1\highlight2 
\par \cf0\highlight0   stats       Display a live stream of container(s) resource usage statistics\cf1\highlight2 
\par \cf0\highlight0   stop        Stop one or more running containers\cf1\highlight2 
\par \cf0\highlight0   tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE\cf1\highlight2 
\par \cf0\highlight0   top         Display the running processes of a container\cf1\highlight2 
\par \cf0\highlight0   unpause     Unpause all processes within one or more containers\cf1\highlight2 
\par \cf0\highlight0   update      Update configuration of one or more containers\cf1\highlight2 
\par \cf0\highlight0   version     Show the Docker version information\cf1\highlight2 
\par \cf0\highlight0   wait        Block until one or more containers stop, then print their exit codes\cf1\highlight2 
\par 
\par \cf0\highlight0 Run 'docker COMMAND --help' for more information on a command.\cf1\highlight2 
\par 
\par \cf0\highlight0\b To get more help with docker, check out our guides at https://docs.docker.com/go/guides/\cf1\highlight2\b0 
\par 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker swarm leave --force\cf1\highlight2 
\par \cf0\highlight0 Node left the swarm.\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ sudo docker images\cf1\highlight2 
\par \cf0\highlight0 REPOSITORY          TAG       IMAGE ID       CREATED          SIZE\cf1\highlight2 
\par \cf0\highlight0 dockerwithjenkins   latest    dc051b4672e7   16 minutes ago   263MB\cf1\highlight2 
\par \cf0\highlight0 ubuntu              18.04     b67d6ac264e4   11 days ago      63.2MB\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker swarm init\cf1\highlight2 
\par \cf0\highlight0 Swarm initialized: current node (xe1k9ulidsqlu3ri4dnmva9bj) is now a manager.\cf1\highlight2 
\par 
\par \cf0\highlight0 To add a worker to this swarm, run the following command:\cf1\highlight2 
\par 
\par \cf0\highlight0     docker swarm join --token SWMTKN-1-5ggrzv2gbfivo3lm46tindhbh2080mfvs5solpakj7zze9rpy5-86ml73albx387i0jw5wue5xh8 172.31.87.44:2377\cf1\highlight2 
\par 
\par \cf0\highlight0 To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\cf1\highlight2 
\par 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker node ls\cf1\highlight2 
\par \cf0\highlight0 ID                            HOSTNAME          STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION\cf1\highlight2 
\par \cf0\highlight0 xe1k9ulidsqlu3ri4dnmva9bj *   ip-172-31-87-44   Ready     Active         Leader           20.10.14\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker service create -p 8081:8081 --name webserve dockerwithjenkins\cf1\highlight2 
\par \cf0\highlight0 image dockerwithjenkins:latest could not be accessed on a registry to record\cf1\highlight2 
\par \cf0\highlight0 its digest. Each node will access dockerwithjenkins:latest independently,\cf1\highlight2 
\par \cf0\highlight0 possibly leading to different nodes running different\cf1\highlight2 
\par \cf0\highlight0 versions of the image.\cf1\highlight2 
\par 
\par \cf0\highlight0 amanjjk57wg73wuzb44ienlux\cf1\highlight2 
\par \cf0\highlight0 overall progress: 1 out of 1 tasks\cf1\highlight2 
\par \cf0\highlight0 1/1: running   [==================================================>]\cf1\highlight2 
\par \cf0\highlight0 verify: Service converged\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker service ls\cf1\highlight2 
\par \cf0\highlight0 ID             NAME       MODE         REPLICAS   IMAGE                      PORTS\cf1\highlight2 
\par \cf0\highlight0 amanjjk57wg7   webserve   replicated   1/1        dockerwithjenkins:latest   *:8081->8081/tcp\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ curl localhost:80\cf1\highlight2 
\par \cf0\highlight0 curl: (7) Failed to connect to localhost port 80: Connection refused\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ sudo chmod 666 /var/run/docker.sock\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ curl localhost:80\cf1\highlight2 
\par \cf0\highlight0 curl: (7) Failed to connect to localhost port 80: Connection refused\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ curl 3.85.25.231:80\cf1\highlight2 
\par \cf0\highlight0 curl: (7) Failed to connect to 3.85.25.231 port 80: Connection refused\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ curl 3.85.25.231:8080:80\cf1\highlight2 
\par \cf0\highlight0 curl: (3) URL using bad/illegal format or missing URL\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ curl 3.85.25.231/8080:80\cf1\highlight2 
\par \cf0\highlight0 curl: (7) Failed to connect to 3.85.25.231 port 80: Connection refused\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ curl 3.85.25.231:80\cf1\highlight2 
\par \cf0\highlight0 curl: (7) Failed to connect to 3.85.25.231 port 80: Connection refused\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ curl 3.85.25.231:8080/80\cf1\highlight2 
\par \cf0\highlight0 <html><head><meta http-equiv='refresh' content='1;url=/login?from=%2F80'/><script>window.location.replace('/login?from=%2F80');</script></head><body style='background-color:white; color:white;'>\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Authentication required\cf1\highlight2 
\par \cf0\highlight0 <!--\cf1\highlight2 
\par \cf0\highlight0 -->\cf1\highlight2 
\par 
\par \cf0\highlight0 </body></html>                                                                                                                                                                                                                                                                                                            ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker service ps webserve\cf1\highlight2 
\par \cf0\highlight0 ID             NAME         IMAGE                      NODE              DESIRED STATE   CURRENT STATE           ERROR     PORTS\cf1\highlight2 
\par \cf0\highlight0 rahyipfpfqx7   webserve.1   dockerwithjenkins:latest   ip-172-31-87-44   Running         Running 2 minutes ago\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker service scale webserve=3\cf1\highlight2 
\par \cf0\highlight0 webserve scaled to 3\cf1\highlight2 
\par \cf0\highlight0 overall progress: 3 out of 3 tasks\cf1\highlight2 
\par \cf0\highlight0 1/3: running   [==================================================>]\cf1\highlight2 
\par \cf0\highlight0 2/3: running   [==================================================>]\cf1\highlight2 
\par \cf0\highlight0 3/3: running   [==================================================>]\cf1\highlight2 
\par \cf0\highlight0 verify: Service converged\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker service ls\cf1\highlight2 
\par \cf0\highlight0 ID             NAME       MODE         REPLICAS   IMAGE                      PORTS\cf1\highlight2 
\par \cf0\highlight0 amanjjk57wg7   webserve   replicated   3/3        dockerwithjenkins:latest   *:8081->8081/tcp\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$ docker service ps webserve\cf1\highlight2 
\par \cf0\highlight0 ID             NAME         IMAGE                      NODE              DESIRED STATE   CURRENT STATE            ERROR     PORTS\cf1\highlight2 
\par \cf0\highlight0 rahyipfpfqx7   webserve.1   dockerwithjenkins:latest   ip-172-31-87-44   Running         Running 3 minutes ago\cf1\highlight2 
\par \cf0\highlight0 rrxty4c1ps2b   webserve.2   dockerwithjenkins:latest   ip-172-31-87-44   Running         Running 14 seconds ago\cf1\highlight2 
\par \cf0\highlight0 nuoy32n309id   webserve.3   dockerwithjenkins:latest   ip-172-31-87-44   Running         Running 14 seconds ago\cf1\highlight2 
\par \cf0\highlight0 ubuntu@ip-172-31-87-44:~/Phase5Docker-Master$\cf1\highlight2 
\par \pard\cf0\highlight0\f4 
\par }
 